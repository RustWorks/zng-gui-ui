name: Release -> Test -> Tag

on:
  push:
    branches: [ "release" ]
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: '--codegen=debuginfo=0 --deny=warnings'
  RUSTDOCFLAGS: '--deny=warnings'
  CARGO_TERM_COLOR: always

jobs:
  test-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest

    name: test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
        - name: install cargo-nextest
          uses: taiki-e/install-action@v2
          with:
            tool: cargo-nextest
        - if: matrix.os == 'windows-latest'
          name: set windows env
          run: |
            echo "CC=clang-cl" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "CXX=clang-cl" | Out-File -FilePath $env:GITHUB_ENV -Append
        - if: matrix.os == 'macos-latest'
          name: set macos env
          run: |
            echo "NEXTEST_RETRIES=3" >> $GITHUB_ENV
        - uses: actions/checkout@v4
          with:
            ref: release
        - run: cargo do version --verbose 
        - run: cargo do fmt --check
        - run: cargo do prebuild
        - run: cargo clean
        - run: cargo do check
        - run: cargo clean
        - run: cargo do doc
        - run: cargo clean
        - run: cargo do test --lib --bins --tests --nextest
        - run: cargo clean
        - run: cargo do test --doc
        - run: cargo clean
        - run: cargo do test --macro --all
        - run: cargo clean
  
  test-cargo-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release
      - run: cargo do publish --test

  tag:
    name: tag
    runs-on: ubuntu-latest
    needs: [test-release, test-cargo-publish]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: release
      - run: cargo do publish_version_tag --execute
