error[E0283]: type annotations needed
   --> cases/property/allowed_in_when_validation.rs:5:44
    |
5   | pub fn invalid1(child: impl UiNode, value: bool) -> impl UiNode {
    |                                            ^^^^ cannot infer type of the type parameter `Self` declared on the trait `IntoVar`
    |
    = note: cannot satisfy `_: VarValue`
note: required by a bound in `allowed_in_when_property_requires_IntoVar_members`
   --> $WORKSPACE/zero-ui-core/src/var.rs
    |
    | pub trait IntoVar<T: VarValue>: Clone {
    |                      ^^^^^^^^ required by this bound in `allowed_in_when_property_requires_IntoVar_members`
help: consider specifying the generic argument
    |
5   | pub fn invalid1(child: impl UiNode, value: bool::<T>) -> impl UiNode {
    |                                                +++++

error[E0283]: type annotations needed
 --> cases/property/allowed_in_when_validation.rs:5:44
  |
5 | pub fn invalid1(child: impl UiNode, value: bool) -> impl UiNode {
  |                                            ^^^^ cannot infer type of the type parameter `Self` declared on the trait `IntoVar`
  |
  = note: multiple `impl`s satisfying `bool: IntoVar<_>` found in the following crates: `zero_ui_core`, `zero_ui`:
          - impl IntoVar<AutoSize> for bool;
          - impl IntoVar<BlockWindowLoad> for bool;
          - impl IntoVar<CaptureMode> for bool;
          - impl IntoVar<Factor> for bool;
          and 12 more
help: consider specifying the generic argument
  |
5 | pub fn invalid1(child: impl UiNode, value: bool::<T>) -> impl UiNode {
  |                                                +++++

error[E0277]: the trait bound `<impl invalid2_Args as invalid2_Args>::T_value: Clone` is not satisfied
   --> cases/property/allowed_in_when_validation.rs:12:44
    |
12  | pub fn invalid2(child: impl UiNode, value: impl UiNode) -> impl UiNode {
    |                                            ^^^^ the trait `Clone` is not implemented for `<impl invalid2_Args as invalid2_Args>::T_value`
    |
note: required by a bound in `allowed_in_when_property_requires_IntoVar_members`
   --> $WORKSPACE/zero-ui-core/src/var.rs
    |
    | pub trait IntoVar<T: VarValue>: Clone {
    |                                 ^^^^^ required by this bound in `allowed_in_when_property_requires_IntoVar_members`

error[E0277]: `<impl invalid2_Args as invalid2_Args>::T_value` doesn't implement `Debug`
  --> cases/property/allowed_in_when_validation.rs:12:44
   |
12 | pub fn invalid2(child: impl UiNode, value: impl UiNode) -> impl UiNode {
   |                                            ^^^^ `<impl invalid2_Args as invalid2_Args>::T_value` cannot be formatted using `{:?}` because it doesn't implement `Debug`
   |
   = help: the trait `Debug` is not implemented for `<impl invalid2_Args as invalid2_Args>::T_value`
   = note: required because of the requirements on the impl of `VarValue` for `<impl invalid2_Args as invalid2_Args>::T_value`
   = note: required because of the requirements on the impl of `IntoVar<<impl invalid2_Args as invalid2_Args>::T_value>` for `<impl invalid2_Args as invalid2_Args>::T_value`

error[E0277]: the trait bound `LocalVar<<impl invalid2_Args as invalid2_Args>::T_value>: UiNode` is not satisfied
  --> cases/property/allowed_in_when_validation.rs:12:44
   |
11 | #[property(context)] // error because no allowed_in_when = false
   | -------------------- required by a bound introduced by this call
12 | pub fn invalid2(child: impl UiNode, value: impl UiNode) -> impl UiNode {
   |                                            ^^^^ the trait `UiNode` is not implemented for `LocalVar<<impl invalid2_Args as invalid2_Args>::T_value>`
   |
   = help: the following other types implement trait `UiNode`:
             AdoptiveChildNode
             AdoptiveNode<U>
             Box<(dyn UiNodeBoxed + 'static)>
             Box<(dyn WidgetBoxed + 'static)>
             DynProperties
             FillUiNode
             NilUiNode
             Option<U>
           and 131 others
note: required by a bound in `invalid2_ArgsImpl::<T_value>::new`
  --> cases/property/allowed_in_when_validation.rs:12:49
   |
11 | #[property(context)] // error because no allowed_in_when = false
   | -------------------- required by a bound in this
12 | pub fn invalid2(child: impl UiNode, value: impl UiNode) -> impl UiNode {
   |                                                 ^^^^^^ required by this bound in `invalid2_ArgsImpl::<T_value>::new`

error[E0277]: `<impl invalid2_Args as invalid2_Args>::T_value` doesn't implement `Debug`
  --> cases/property/allowed_in_when_validation.rs:11:1
   |
11 | #[property(context)] // error because no allowed_in_when = false
   | ^^^^^^^^^^^^^^^^^^^^ `<impl invalid2_Args as invalid2_Args>::T_value` cannot be formatted using `{:?}` because it doesn't implement `Debug`
   |
   = help: the trait `Debug` is not implemented for `<impl invalid2_Args as invalid2_Args>::T_value`
   = note: required because of the requirements on the impl of `VarValue` for `<impl invalid2_Args as invalid2_Args>::T_value`
note: required by a bound in `LocalVar`
  --> $WORKSPACE/zero-ui-core/src/var/local.rs
   |
   | pub struct LocalVar<T: VarValue>(pub T);
   |                        ^^^^^^^^ required by this bound in `LocalVar`
   = note: this error originates in the attribute macro `property` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `<impl invalid2_Args as invalid2_Args>::T_value: Clone` is not satisfied
  --> cases/property/allowed_in_when_validation.rs:11:1
   |
11 | #[property(context)] // error because no allowed_in_when = false
   | ^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `<impl invalid2_Args as invalid2_Args>::T_value`
   |
   = note: required because of the requirements on the impl of `VarValue` for `<impl invalid2_Args as invalid2_Args>::T_value`
note: required by a bound in `LocalVar`
  --> $WORKSPACE/zero-ui-core/src/var/local.rs
   |
   | pub struct LocalVar<T: VarValue>(pub T);
   |                        ^^^^^^^^ required by this bound in `LocalVar`
   = note: this error originates in the attribute macro `property` (in Nightly builds, run with -Z macro-backtrace for more info)
