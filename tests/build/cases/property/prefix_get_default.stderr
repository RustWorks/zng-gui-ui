error[E0277]: can't compare `NotDefault` with `NotDefault`
  --> cases/property/prefix_get_default.rs:10:58
   |
10 | pub fn get_state_invalid(child: impl UiNode, state: impl IntoVar<NotDefault>) -> impl UiNode {
   |                                                          ^^^^^^^^^^^^^^^^^^^ no implementation for `NotDefault == NotDefault`
   |
   = help: the trait `PartialEq` is not implemented for `NotDefault`
   = note: required for `NotDefault` to implement `VarValue`
note: required by a bound in `IntoVar`
  --> $WORKSPACE/zero-ui-var/src/lib.rs
   |
   | pub trait IntoVar<T: VarValue> {
   |                      ^^^^^^^^ required by this bound in `IntoVar`
help: consider annotating `NotDefault` with `#[derive(PartialEq)]`
   |
16  + #[derive(PartialEq)]
17  | pub struct NotDefault {}
    |

error[E0277]: can't compare `NotDefault` with `NotDefault`
  --> cases/property/prefix_get_default.rs:10:66
   |
10 | pub fn get_state_invalid(child: impl UiNode, state: impl IntoVar<NotDefault>) -> impl UiNode {
   |                                                                  ^^^^^^^^^^ no implementation for `NotDefault == NotDefault`
   |
   = help: the trait `PartialEq` is not implemented for `NotDefault`
   = note: required for `NotDefault` to implement `VarValue`
note: required by a bound in `WhenInputVar::new`
  --> $WORKSPACE/zero-ui-app/src/widget/builder.rs
   |
   |     pub fn new<T: VarValue>() -> (Self, impl Var<T>) {
   |                   ^^^^^^^^ required by this bound in `WhenInputVar::new`
help: consider annotating `NotDefault` with `#[derive(PartialEq)]`
   |
16   + #[derive(PartialEq)]
17   | pub struct NotDefault {}
     |
