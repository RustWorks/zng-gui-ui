error: `new` cannot be `async`
 --> cases/widget/new_fns_cannot_be_async.rs:7:5
  |
7 |     async fn new(child: impl UiNode, id: impl IntoValue<WidgetId>) -> impl UiNode {
  |     ^^^^^

error: `new_child` cannot be `async`
  --> cases/widget/new_fns_cannot_be_async.rs:10:5
   |
10 |     async fn new_child() -> NilUiNode {
   |     ^^^^^

error[E0277]: the trait bound `impl Future<Output = NilUiNode>: UiNode` is not satisfied
  --> cases/widget/new_fns_cannot_be_async.rs:10:29
   |
3  | #[widget($crate::test_widget)]
   | ------------------------------ required by a bound introduced by this call
...
10 |     async fn new_child() -> NilUiNode {
   |                             ^^^^^^^^^ the trait `UiNode` is not implemented for `impl Future<Output = NilUiNode>`
   |
   = help: the following other types implement trait `UiNode`:
             AdoptiveChildNode
             AdoptiveNode<U>
             Box<(dyn UiNodeBoxed + 'static)>
             Box<(dyn WidgetBoxed + 'static)>
             DynProperties
             FillUiNode
             NilUiNode
             Option<U>
           and 130 others
note: required by a bound in `test_widget::__new_child::box_fix`
  --> cases/widget/new_fns_cannot_be_async.rs:3:1
   |
3  | #[widget($crate::test_widget)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `test_widget::__new_child::box_fix`
   = note: this error originates in the attribute macro `widget` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `impl Future<Output = impl UiNode>: UiNode` is not satisfied
 --> cases/widget/new_fns_cannot_be_async.rs:7:71
  |
7 |     async fn new(child: impl UiNode, id: impl IntoValue<WidgetId>) -> impl UiNode {
  |                                                                       ^^^^^^^^^^^ the trait `UiNode` is not implemented for `impl Future<Output = impl UiNode>`
  |
  = help: the following other types implement trait `UiNode`:
            AdoptiveChildNode
            AdoptiveNode<U>
            Box<(dyn UiNodeBoxed + 'static)>
            Box<(dyn WidgetBoxed + 'static)>
            DynProperties
            FillUiNode
            NilUiNode
            Option<U>
          and 130 others
