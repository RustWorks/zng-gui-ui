error: `new` does not support `const` generics
 --> cases/widget/new_fns_cannot_const_generics.rs:7:12
  |
7 |     fn new<const N: usize>(child: impl UiNode, id: impl IntoValue<WidgetId>) -> [bool; N] {
  |            ^^^^^

error: `new_child` does not support `const` generics
  --> cases/widget/new_fns_cannot_const_generics.rs:10:18
   |
10 |     fn new_child<const N: usize>() -> [bool; N] {
   |                  ^^^^^

error[E0425]: cannot find value `N` in this scope
 --> cases/widget/new_fns_cannot_const_generics.rs:7:88
  |
7 |     fn new<const N: usize>(child: impl UiNode, id: impl IntoValue<WidgetId>) -> [bool; N] {
  |                                                                                        ^ not found in this scope
  |
help: consider importing one of these items
  |
5 |     use zero_ui::prelude::GestureKey::N;
  |
5 |     use zero_ui::prelude::Key::N;
  |

error[E0277]: the trait bound `[bool; _]: UiNode` is not satisfied
  --> cases/widget/new_fns_cannot_const_generics.rs:10:39
   |
3  | #[widget($crate::test_widget)]
   | ------------------------------ required by a bound introduced by this call
...
10 |     fn new_child<const N: usize>() -> [bool; N] {
   |                                       ^^^^^^^^^ the trait `UiNode` is not implemented for `[bool; _]`
   |
   = help: the following other types implement trait `UiNode`:
             Box<(dyn UiNodeBoxed + 'static)>
             Box<(dyn WidgetBoxed + 'static)>
             FillUiNode
             InstrumentedNode<N, S>
             NilUiNode
             Option<U>
             PropertyInfoNode
             ViewGenerator<D>::presenter_map::ViewGenVarPresenter<G, S, U, M, V>
           and 118 others
note: required by a bound in `test_widget::__new_child::box_fix`
  --> cases/widget/new_fns_cannot_const_generics.rs:3:1
   |
3  | #[widget($crate::test_widget)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `test_widget::__new_child::box_fix`
   = note: this error originates in the attribute macro `widget` (in Nightly builds, run with -Z macro-backtrace for more info)
