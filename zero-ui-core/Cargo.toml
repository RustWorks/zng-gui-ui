[package]
name = "zero-ui-core"
version = "0.1.0"
authors = ["Samuel Guerra <sam.rodr.g@gmail.com>", "Well <well-r@hotmail.com>"]
edition = "2021"
license = "Apache-2.0"

[features]
default = ["ipc", "http", "debug_default", "toml"]

# Enables pre-build views and connecting to views running in another process.
# 
# Enabled by default.
ipc = ["zero-ui-view-api/ipc"]

# Enables http tasks.
#
# Enabled by default.
http = ["isahc", "http-cache-semantics", "http-serde"]

# Signal the build script to enable the `dyn_*`, `inspector` and `trace_widget` features for debug builds.
#
# Enabled by default.
debug_default = ["zero-ui-var/debug_default"]

# Use dynamic dispatch at the node level by placing each property node in a `BoxedUiNode` and enabling `UiNode::cfg_boxed`.
#
# This speeds-up compilation time at the cost of runtime.
dyn_node = []

# Instrument each widget instance to retain build information.
inspector = []

# Use dynamic dispatch at the app-extension level.
#
# This speeds-up compilation time at the cost of runtime.
dyn_app_extension = []

# Box closures at opportune places, such as `Var::map`, reducing the number of monomorphised types.
#
# This speeds-up compilation time at the cost of runtime.
dyn_closure = ["zero-ui-var/dyn_closure"]

# like cfg(test) but also visible in docs and integration tests.
#
# USAGE:
#
# For zero-ui-core maintainers, use `#[cfg(feature="test_util")]` in the helper types and places where
# the types are used. Use `do` to run integration tests.
#
# For external dependents, build with this feature to use the test helper types that show
# in the documentation.
test_util = ["multi_app", "deadlock_detection"]

# Allows multiple app instances per-process.
#
# This feature allows multiple apps, one app per thread at a time. The `LocalContext` tracks
# what app is currently running in each thread and `app_local!` statics switch to the value of each app
# depending on the current thread.
#
# Not enabled by default, but enabled by `feature="test_util"`.
multi_app = ["zero-ui-app_context/multi_app"]

# Instrument every widget outer-most node to trace UI methods.
trace_widget = []

# Instrument every property and intrinsic node to trace UI methods.
#
# Note that this can cause very large trace files and bad performance.
trace_wgt_item = []

# Spawns a thread on app creation that checks and prints `parking_lot` deadlocks.
#
# Not enabled by default, but enabled by `feature="test_util"`.
deadlock_detection = ["parking_lot/deadlock_detection"]

# Embed hyphenation dictionaries for all supported languages.
#
# If enabled some 2.8MB of data is embedded, you can provide an alternative dictionary source using the 
# `Hyphenation::dictionary_source` method.
#
# Not enabled by default.
hyphenation_embed_all = ["hyphenation/embed_all"]

# YAML config support.
yaml = ["serde_yaml"]

[dependencies]
# local
zero-ui-proc-macros = { path = "../zero-ui-proc-macros" }
zero-ui-view-api = { path = "../zero-ui-view-api", default-features = false, features = ["var"]}
zero-ui-unique_id = { path = "../zero-ui-unique_id" }
zero-ui-units = { path = "../zero-ui-units" }
zero-ui-txt = { path = "../zero-ui-txt" }
zero-ui-app_context = { path = "../zero-ui-app_context" }
zero-ui-clone_move = { path = "../zero-ui-clone_move" }
zero-ui-handle = { path = "../zero-ui-handle" }
zero-ui-var = { path = "../zero-ui-var", default-features = false }

# text
font-kit = "0.11"
unic-langid = { version = "0.9", features = ["serde"] }
unicase = "2"
harfbuzz_rs = "2"
unicode-linebreak = "0.1"
pathfinder_geometry = "0.5"
hyphenation = { version = "0.8", default-features = false }
regex = "1"
unicode-bidi = "0.3"
unicode-segmentation = "1"
icu_properties = "1.3"

# task
flume = { version = "0.11", default-features  = false, features = ["async"] }
rayon = "1"
blocking = "1"
parking_lot = "0.12"
futures-timer = "3"
isahc = { version = "1", features = ["cookies", "json"], optional = true }
futures-lite = "2"
async-fs = "2"
http-cache-semantics = { version = "1", optional = true }
http-serde = { version = "1", optional = true }

# util
bitflags = { version = "2", features = ["serde", "bytemuck"] }
paste = "1"
rustc-hash = "1"
colored = "2"
derive_more = "0.99"
once_cell = "1"
byteorder = "1"
tracing = "0.1"
rand = "0.8"
base64 = "0.21"
hashbrown = { version = "0.14", features = ["rayon"] }
sha2 = "0.10"
fs4 = "0.7"
remove_dir_all = "0.8"
async-trait = "0.1"
async-recursion = "1"
pretty-type-name = "1"
num_enum = "0.7"
take_mut = "0.2"
smallvec = { version = "1", features = ["const_new", "serde"] }
const-random = "0.1.15"
atomic = "0.6"
bytemuck = { version = "1", features = ["derive"] }
notify = "6.1"
glob = "0.3"
path-absolutize = "3"
walkdir = "2"
indexmap = { version = "2", features = ["serde"] }

# serde
serde = "1"
serde_json = { version = "1", features = ["preserve_order"] }
toml = { version = "0.8", optional = true, features = ["preserve_order"] }
ron = { version = "0.8", optional = true, features = ["indexmap"] }
serde_yaml = { version = "0.9", optional = true }

# fluent
fluent = "0.16"
fluent-syntax = "0.11"
intl-memoizer = "0.5"

[dev-dependencies]
pretty_assertions = "1"

[package.metadata.docs.rs]
rustdoc-args = [ "--html-in-header", "zero-ui-core/src/doc/html-in-header.html" ]