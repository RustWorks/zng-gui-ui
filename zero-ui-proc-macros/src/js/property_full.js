// Script inserted in each property function's full page after the user docs.
// It changes the page to highlight the widget property aspects.
function property(capture_only) {
    // change title.
    let title = document.getElementsByTagName('h1')[0];
    title.innerHTML = title.innerHTML.replace('Function', 'Property');

    // copy fn declaration to Function section that was generated by #[property]
    let fn = document.querySelector('pre.rust.fn');
    let ffn = capture_only ? document.createElement('h1') : document.getElementById('ffn');
    ffn.innerHTML = fn.innerHTML;

    // remove where section for editing the innerText
    let where = fn.querySelector('span.where');
    if (where !== null) {
        where.remove();
    }

    // edit the function source code to only show the property name and arguments.
    let m = fn.innerText.match(/(?<vis>pub.*)?fn (?<name>\w+)(?:<.+(?=>\()>)?\((?<inputs>.+)\).*/s).groups;
    let inputs = m.inputs;
    if (!capture_only) {
        inputs = inputs.replace(/\s*\w+: .+?(?=,\s*\w+: ),\n?/s, '');
    }

    if (inputs.match(/\w: /g).length > 1) {
        fn.innerText = `${m.vis}${m.name} = { ${inputs} };`;
    } else {
        let input = inputs.trim().replace(/,$/, '').replace(/\w+: /, '');
        fn.innerText = `${m.vis}${m.name} = ${input};`;
    }

    // recreate the type anchors:
    let set = new Set();
    for (let a of ffn.getElementsByTagName('a')) {
        if (!set.has(a.innerText)) {
            fn.innerHTML = fn.innerHTML.replaceAll(a.innerText, a.outerHTML);
            set.add(a.innerText)
        }
    }

    // reapend where section
    if (where !== null) {
        fn.appendChild(where);
    }

    document.addEventListener('DOMContentLoaded', function() {
        // the header script ends up in the sidebar tooltip, remove it here.
        // note, the bad tooltips still show from an item page we don't control (like a struct in the same mod).
        document.querySelectorAll('div.block.fn li a, div.block.mod li a').forEach(function(a) {
            a.title = a.title.replace(/var div=doc.*/, '');
        });
    });
}